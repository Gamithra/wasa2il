# -*- coding: utf-8 -*-
# Generated by Django 1.11.13 on 2018-06-09 23:35
from __future__ import unicode_literals

from django.db import migrations


# This will update the current polity rulesets to fit with the new
# calculations. Previously, the times would layer on top of each other, so
# proposal time would be defined as discussion time plus something, and vote
# time would be defined as proposal time plus something. This is now changed,
# so that these are absolute times from the starting point of the issue. We
# don't want to meddle with already made decisions according to the old
# calculations, so here we update the polity rulesets to reflect this new
# calculation, without interfering with current functionality.
def update_rulesets(apps, schema_editor):
    PolityRuleset = apps.get_model('polity', 'PolityRuleset')

    for rs in PolityRuleset.objects.all():
        rs.issue_proposal_time = rs.issue_proposal_time + rs.issue_discussion_time
        rs.issue_vote_time = rs.issue_vote_time + rs.issue_proposal_time
        rs.save()


# Same thing as above, only the exact opposite.
def revert_rulesets(apps, schema_editor):
    PolityRuleset = apps.get_model('polity', 'PolityRuleset')

    for rs in PolityRuleset.objects.all():
        rs.issue_vote_time = rs.issue_vote_time - rs.issue_proposal_time
        rs.issue_proposal_time = rs.issue_proposal_time - rs.issue_discussion_time
        rs.save()


class Migration(migrations.Migration):

    dependencies = [
        ('polity', '0006_auto_20180325_1940'),
    ]

    operations = [
        migrations.RunPython(update_rulesets, revert_rulesets)
    ]
